{"version":3,"sources":["components/message/Message.jsx","components/response/Response.jsx","components/typing/Typing.jsx","components/messageHistory/MessageHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["Message","from","message","className","name","time","text","Response","Typing","MessageHistory","list","ComponentsCollection","response","typing","map","item","ComponentName","type","id","defaultProps","messages","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAEe,SAASA,EAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACtC,OACE,+BACE,sBAAKC,UAAU,eAAf,UACE,uBAAMA,UAAU,oBAAhB,UAAoC,mBAAGA,UAAU,wBAAyBF,EAAKG,QAC/E,sBAAMD,UAAU,oBAAhB,SAAqCD,EAAQG,UAE/C,qBAAKF,UAAU,qBAAf,SACGD,EAAQI,UCRF,SAASC,EAAT,GAAsC,IAAlBN,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACrC,OACE,qBAAIC,UAAU,WAAd,UACE,sBAAKA,UAAU,2BAAf,UACE,sBAAMA,UAAU,oBAAhB,SAAqCD,EAAQG,OAC7C,sBAAMF,UAAU,oBAAhB,SAAqCF,EAAKG,OAC1C,mBAAGD,UAAU,uBAEf,qBAAKA,UAAU,oCAAf,SACGD,EAAQI,UCTJ,SAASE,EAAT,GAAoC,IAAlBP,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACnC,OACE,+BACE,sBAAKC,UAAU,eAAf,UACE,uBAAMA,UAAU,oBAAhB,UAAoC,mBAAGA,UAAU,wBAA2BF,EAAKG,QACjF,sBAAMD,UAAU,oBAAhB,SAAqCD,EAAQG,UAE/C,sBAAKF,UAAU,SAAf,UACE,mBAAGA,UAAU,wBACb,mBAAGA,UAAU,wBACb,mBAAGA,UAAU,8BCRR,SAASM,EAAT,GAAmC,IAATC,EAAQ,EAARA,KAE/BC,EAAuB,CAC3BT,QAASF,EACTY,SAAUL,EACVM,OAAQL,GAGV,OACE,6BACGE,EAAKI,KAAI,SAACC,GACT,IAAMC,EAAgBL,EAAqBI,EAAKE,MAChD,OAAO,cAACD,EAAD,CAA6Bf,KAAMc,EAAKd,KAAMC,QAAS,CAAEG,KAAMU,EAAKV,KAAMC,KAAMS,EAAKT,OAAjES,EAAKG,SAMxCT,EAAeU,aAAe,CAC5BT,KAAM,ICpBV,IAAMU,EAAW,CAAC,CAChBF,GAAI,cACJjB,KAAM,CAAEG,KAAM,kCACda,KAAM,WACNZ,KAAM,QACNC,KAAM,kRACL,CACDY,GAAI,cACJjB,KAAM,CAAEG,KAAM,wCACda,KAAM,UACNZ,KAAM,QACNC,KAAM,8bACL,CACDY,GAAI,cACJjB,KAAM,CAAEG,KAAM,kCACda,KAAM,WACNZ,KAAM,QACNC,KAAM,8rBACL,CACDY,GAAI,cACJjB,KAAM,CAAEG,KAAM,wCACda,KAAM,UACNZ,KAAM,QACNC,KAAM,6RACL,CACDY,GAAI,cACJjB,KAAM,CAAEG,KAAM,wCACda,KAAM,SACNZ,KAAM,UAeOgB,MAZf,WACE,OACE,qBAAKlB,UAAU,qBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,cAACM,EAAD,CAAgBC,KAAMU,WC3BjBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.717144cc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Message({ from, message }) {\n  return (\n    <li>\n      <div className=\"message-data\">\n        <span className=\"message-data-name\"><i className=\"fa fa-circle online\" />{from.name}</span>\n        <span className=\"message-data-time\">{message.time}</span>\n      </div>\n      <div className=\"message my-message\">\n        {message.text}\n      </div>\n    </li>\n  );\n}\n\nMessage.propTypes = {\n  from: PropTypes.shape({\n    name: PropTypes.string\n  }).isRequired,\n  message: PropTypes.shape({\n    time: PropTypes.string,\n    text: PropTypes.string,\n  }).isRequired,\n}","import PropTypes from 'prop-types';\n\nexport default function Response({ from, message }) {\n    return (\n      <li className=\"clearfix\">\n        <div className=\"message-data align-right\">\n          <span className=\"message-data-time\">{message.time}</span>\n          <span className=\"message-data-name\">{from.name}</span>\n          <i className=\"fa fa-circle me\" />\n        </div>\n        <div className=\"message other-message float-right\">\n          {message.text}\n        </div>\n      </li>\n    );\n  }\n  \n  Response.propTypes = {\n    from: PropTypes.shape({\n      name: PropTypes.string\n    }).isRequired,\n    message: PropTypes.shape({\n      time: PropTypes.string,\n      text: PropTypes.string,\n    }).isRequired,\n  }","import PropTypes from 'prop-types';\n\nexport default function Typing({ from, message }) {\n    return (\n      <li>\n        <div className=\"message-data\">\n          <span className=\"message-data-name\"><i className=\"fa fa-circle online\"></i>{from.name}</span>\n          <span className=\"message-data-time\">{message.time}</span>\n        </div>\n        <div className=\"typing\">\n          <i className=\"fa fa-circle online\" />\n          <i className=\"fa fa-circle online\" />\n          <i className=\"fa fa-circle online\" />\n        </div>\n      </li>\n    );\n  }\n  \n  Typing.propTypes = {\n    from: PropTypes.shape({\n      name: PropTypes.string\n    }).isRequired,\n    message: PropTypes.shape({\n      time: PropTypes.string,\n    }).isRequired,\n  }","import Message from '../message/Message';\nimport Response from '../response/Response';\nimport Typing from '../typing/Typing';\n\nexport default function MessageHistory({ list }) {\n\n    const ComponentsCollection = {\n      message: Message,\n      response: Response,\n      typing: Typing,\n    };\n  \n    return (\n      <ul>\n        {list.map((item) => {\n          const ComponentName = ComponentsCollection[item.type];\n          return <ComponentName key={item.id} from={item.from} message={{ time: item.time, text: item.text }} />\n        })}\n      </ul>\n    );\n  }\n  \n  MessageHistory.defaultProps = {\n    list: []\n  };","import './App.css';\nimport MessageHistory from './components/messageHistory/MessageHistory';\n\nconst messages = [{\n  id: 'chat-5-1090',\n  from: { name: 'Ольга' },\n  type: 'response',\n  time: '10:10',\n  text: 'Привет, Виктор. Как дела? Как идет работа над проектом?'\n}, {\n  id: 'chat-5-1091',\n  from: { name: 'Виктор' },\n  type: 'message',\n  time: '10:12',\n  text: 'Привет. Давай сегодня созвонимся. Проект практически готов, и у меня есть что показать.'\n}, {\n  id: 'chat-5-1092',\n  from: { name: 'Ольга' },\n  type: 'response',\n  time: '10:14',\n  text: 'Не уверена что сегодня получится. Не все еще в офисе. Давай уточню через час. Возникли ли какие-либо проблемы на последней стадии проекта?'\n}, {\n  id: 'chat-5-1093',\n  from: { name: 'Виктор' },\n  type: 'message',\n  time: '10:20',\n  text: 'Нет, все прошло гладко. Очень хочу показать всё команде.'\n}, {\n  id: 'chat-5-1094',\n  from: { name: 'Виктор' },\n  type: 'typing',\n  time: '10:31'\n}];\n\nfunction App() {\n  return (\n    <div className=\"clearfix container\">\n      <div className=\"chat\">\n        <div className=\"chat-history\">\n          <MessageHistory list={messages} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}